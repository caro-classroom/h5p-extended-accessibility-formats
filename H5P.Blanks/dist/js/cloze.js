/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./H5P.Blanks/src/cloze.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./H5P.Blanks/src/cloze.js":
/*!*********************************!*\
  !*** ./H5P.Blanks/src/cloze.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function ($, Blanks) {\n  /**\n   * Simple private class for keeping track of clozes.\n   *\n   * @class H5P.Blanks.Cloze\n   * @param {string} answer\n   * @param {Object} behaviour Behavioral settings for the task from semantics\n   * @param {boolean} behaviour.acceptSpellingErrors - If true, answers will also count correct if they contain small spelling errors.\n   * @param {string} defaultUserAnswer\n   * @param {Object} l10n Localized texts\n   * @param {string} l10n.solutionLabel Assistive technology label for cloze solution\n   * @param {string} l10n.inputLabel Assistive technology label for cloze input\n   * @param {string} l10n.inputHasTipLabel Assistive technology label for input with tip\n   * @param {string} l10n.tipLabel Label for tip icon\n   */\n  Blanks.Cloze = function (solution, behaviour, defaultUserAnswer, ttsID, l10n) {\n    var self = this;\n    var $input, $wrapper;\n    var answers = solution.solutions;\n    var answer = answers.join('/');\n    var tip = solution.tip;\n    var checkedAnswer = null;\n    var inputLabel = l10n.inputLabel;\n    var enableTTSButtons = behaviour.enableTTSButtons;\n\n    if (behaviour.caseSensitive !== true) {\n      // Convert possible solutions into lowercase\n      for (var i = 0; i < answers.length; i++) {\n        answers[i] = answers[i].toLowerCase();\n      }\n    }\n    /**\n     * Check if the answer is correct.\n     *\n     * @private\n     * @param {string} answered\n     */\n\n\n    var correct = function correct(answered) {\n      if (behaviour.caseSensitive !== true) {\n        answered = answered.toLowerCase();\n      }\n\n      for (var i = 0; i < answers.length; i++) {\n        // Damerau-Levenshtein comparison\n        if (behaviour.acceptSpellingErrors === true) {\n          var levenshtein = H5P.TextUtilities.computeLevenshteinDistance(answered, answers[i], true);\n          /*\n           * The correctness is temporarily computed by word length and number of number of operations\n           * required to change one word into the other (Damerau-Levenshtein). It's subject to\n           * change, cmp. https://github.com/otacke/udacity-machine-learning-engineer/blob/master/submissions/capstone_proposals/h5p_fuzzy_blanks.md\n           */\n\n          if (answers[i].length > 9 && levenshtein <= 2) {\n            return true;\n          } else if (answers[i].length > 3 && levenshtein <= 1) {\n            return true;\n          }\n        } // regular comparison\n\n\n        if (answered === answers[i]) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n    /**\n     * Check if filled out.\n     *\n     * @param {boolean}\n     */\n\n\n    this.filledOut = function () {\n      var answered = this.getUserAnswer(); // Blank can be correct and is interpreted as filled out.\n\n      return answered !== '' || correct(answered);\n    };\n    /**\n     * Check the cloze and mark it as wrong or correct.\n     */\n\n\n    this.checkAnswer = function () {\n      checkedAnswer = this.getUserAnswer();\n      var isCorrect = correct(checkedAnswer);\n\n      if (isCorrect) {\n        $wrapper.addClass('h5p-correct');\n        $input.attr('disabled', true).attr('aria-label', inputLabel + '. ' + l10n.answeredCorrectly);\n      } else {\n        $wrapper.addClass('h5p-wrong');\n        $input.attr('aria-label', inputLabel + '. ' + l10n.answeredIncorrectly);\n      }\n    };\n    /**\n     * Disables input.\n     * @method disableInput\n     */\n\n\n    this.disableInput = function () {\n      this.toggleInput(false);\n    };\n    /**\n     * Enables input.\n     * @method enableInput\n     */\n\n\n    this.enableInput = function () {\n      this.toggleInput(true);\n    };\n    /**\n     * Toggles input enable/disable\n     * @method toggleInput\n     * @param  {boolean}   enabled True if input should be enabled, otherwise false\n     */\n\n\n    this.toggleInput = function (enabled) {\n      $input.attr('disabled', !enabled);\n    };\n    /**\n     * Show the correct solution.\n     */\n\n\n    this.showSolution = function () {\n      if (correct(this.getUserAnswer())) {\n        return; // Only for the wrong ones\n      }\n\n      $('<span>', {\n        'aria-hidden': true,\n        'class': 'h5p-correct-answer',\n        text: answer,\n        insertAfter: $wrapper\n      });\n      $input.attr('disabled', true);\n      var ariaLabel = inputLabel + '. ' + l10n.solutionLabel + ' ' + answer + '. ' + l10n.answeredIncorrectly;\n      $input.attr('aria-label', ariaLabel);\n    };\n    /**\n     * @returns {boolean}\n     */\n\n\n    this.correct = function () {\n      return correct(this.getUserAnswer());\n    };\n    /**\n     * Set input element.\n     *\n     * @param {H5P.jQuery} $element\n     * @param {function} afterCheck\n     * @param {function} afterFocus\n     * @param {number} clozeIndex Index of cloze\n     * @param {number} totalCloze Total amount of clozes in blanks\n     */\n\n\n    this.setInput = function ($element, afterCheck, afterFocus, clozeIndex, totalCloze) {\n      $input = $element;\n      $wrapper = $element.parent();\n      inputLabel = inputLabel.replace('@num', clozeIndex + 1).replace('@total', totalCloze); // Add tip if tip is set\n\n      if (tip !== undefined && tip.trim().length > 0) {\n        $wrapper.addClass('has-tip').append(H5P.JoubelUI.createTip(tip, {\n          tipLabel: l10n.tipLabel\n        }));\n        inputLabel += '. ' + l10n.inputHasTipLabel;\n      }\n\n      $input.attr('aria-label', inputLabel);\n\n      if (afterCheck !== undefined) {\n        $input.blur(function () {\n          if (self.filledOut()) {\n            // Check answers\n            if (!behaviour.enableRetry) {\n              self.disableInput();\n            }\n\n            self.checkAnswer();\n            afterCheck.apply(self);\n          }\n        });\n      }\n\n      $input.keyup(function () {\n        if (checkedAnswer !== null && checkedAnswer !== self.getUserAnswer()) {\n          // The Answer has changed since last check\n          checkedAnswer = null;\n          $wrapper.removeClass('h5p-wrong');\n          $input.attr('aria-label', inputLabel);\n\n          if (afterFocus !== undefined) {\n            afterFocus();\n          }\n        }\n      });\n    };\n    /**\n     * @returns {string} Cloze html\n     */\n\n\n    this.toString = function () {\n      var extra = defaultUserAnswer ? ' value=\"' + defaultUserAnswer + '\"' : '';\n      var ttsButton = enableTTSButtons === true ? '<button class=\"h5p-action-button\" data-id=\"' + ttsID + '\">X</button>' : '';\n      var result = '<span class=\"h5p-input-wrapper\">' + ttsButton + '<input type=\"text\" class=\"h5p-text-input\" autocomplete=\"off\" autocapitalize=\"off\"' + extra + '></span>';\n      self.length = result.length;\n      return result;\n    };\n    /**\n     * @returns {string} Trimmed answer\n     */\n\n\n    this.getUserAnswer = function () {\n      return H5P.trim($input.val());\n    };\n    /**\n     * @returns {string} Answer\n     */\n\n\n    this.getUserInput = function () {\n      return $input.val();\n    };\n    /**\n     * @param {string} text New input text\n     */\n\n\n    this.setUserInput = function (text) {\n      $input.val(text);\n    };\n    /**\n     * Resets aria label of input field\n     */\n\n\n    this.resetAriaLabel = function () {\n      $input.attr('aria-label', inputLabel);\n    };\n  };\n})(H5P.jQuery, H5P.Blanks);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./H5P.Blanks/src/cloze.js\n");

/***/ })

/******/ });